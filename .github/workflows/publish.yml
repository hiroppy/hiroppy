name: Publish to NPM

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build and Commit on Data Changes"]
    types: [completed]
    branches: [main]
  push:
    branches:
      - main
    paths:
      - "generated/**"
      - "src/**"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: ./.github/actions/setup-node
      - name: Set changes to true for workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        id: workflow-dispatch-changes
        run: |
          echo "Setting changes=true for manual workflow dispatch..."
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "✅ Manual publish requested via workflow_dispatch"

      - name: Check if generated or src files changed
        id: check-changes
        if: github.event_name != 'workflow_dispatch'
        run: |
          echo "Checking for changes in generated/ or src/ directories..."
          # Check if HEAD~1 exists (handles first commit case)
          if git rev-parse --verify HEAD~1 >/dev/null 2>&1; then
            if git diff --name-only HEAD~1 HEAD | grep -q -E "^(generated/|src/)"; then
              echo "changes=true" >> $GITHUB_OUTPUT
              echo "✅ Generated or src files have changed"
              git diff --name-only HEAD~1 HEAD | grep -E "^(generated/|src/)" | head -10
            else
              echo "changes=false" >> $GITHUB_OUTPUT
              echo "ℹ️ No changes in generated or src files"
            fi
          else
            # First commit or other edge case - check if generated or src files exist at all
            echo "⚠️ Cannot compare with previous commit (first commit or shallow clone)"
            if git ls-files | grep -q -E "^(generated/|src/)"; then
              echo "changes=true" >> $GITHUB_OUTPUT
              echo "✅ Generated or src files exist in this commit"
              git ls-files | grep -E "^(generated/|src/)" | head -10
            else
              echo "changes=false" >> $GITHUB_OUTPUT
              echo "ℹ️ No generated or src files found"
            fi
          fi
      - name: Validate package before publishing
        if: steps.check-changes.outputs.changes == 'true' || steps.workflow-dispatch-changes.outputs.changes == 'true'
        run: |
          echo "Validating package structure..."
          npm pack --dry-run
          echo "✅ Package validation successful"
      - name: Bump version and set output
        if: steps.check-changes.outputs.changes == 'true' || steps.workflow-dispatch-changes.outputs.changes == 'true'
        id: version
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Increment patch version
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Update package.json
          npm version $NEW_VERSION --no-git-tag-version
          echo "✅ Version bumped to $NEW_VERSION"

          # Commit version bump
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git push
          echo "✅ Version commit pushed"
      - name: Build src to dist
        if: steps.check-changes.outputs.changes == 'true' || steps.workflow-dispatch-changes.outputs.changes == 'true'
        run: |
          echo "Building TypeScript source to dist..."
          pnpm build:src
          echo "✅ TypeScript compilation completed"
      - run: pnpm compress:images
      - name: Publish to NPM
        if: steps.check-changes.outputs.changes == 'true' || steps.workflow-dispatch-changes.outputs.changes == 'true'
        run: |
          echo "Publishing to NPM..."
          npm publish --provenance --access public
          echo "✅ Successfully published to NPM"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create Git Tag
        if: steps.check-changes.outputs.changes == 'true' || steps.workflow-dispatch-changes.outputs.changes == 'true'
        run: |
          echo "Creating and pushing git tag..."
          git tag v${{ steps.version.outputs.new_version }}
          git push origin v${{ steps.version.outputs.new_version }}
          echo "✅ Git tag v${{ steps.version.outputs.new_version }} created"
      - name: Create GitHub Release
        if: steps.check-changes.outputs.changes == 'true' || steps.workflow-dispatch-changes.outputs.changes == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release v${{ steps.version.outputs.new_version }}
          body: |
            🚀 Automated release for generated content updates

            ## Changes in this release
            - Updated generated files in the media package
            - Version bumped to ${{ steps.version.outputs.new_version }}

            ## Package Info
            - Package: `hiroppy`
            - Version: `${{ steps.version.outputs.new_version }}`
            - NPM: https://www.npmjs.com/package/hiroppy

            This release was automatically created when changes were detected in the `generated/` directory.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Summary
        if: steps.check-changes.outputs.changes == 'true' || steps.workflow-dispatch-changes.outputs.changes == 'true'
        run: |
          echo "## 🎉 Publication Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: hiroppy" >> $GITHUB_STEP_SUMMARY
          echo "- **New Version**: ${{ steps.version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **NPM Package**: https://www.npmjs.com/package/hiroppy" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Release**: https://github.com/hiroppy/media/releases/tag/v${{ steps.version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The package has been successfully published to NPM! 🚀" >> $GITHUB_STEP_SUMMARY
      - name: No changes summary
        if: steps.check-changes.outputs.changes == 'false' && github.event_name != 'workflow_dispatch'
        run: |
          echo "## ℹ️ No Publication Needed" >> $GITHUB_STEP_SUMMARY
          echo "No changes were detected in the \`generated/\` or \`src/\` directories." >> $GITHUB_STEP_SUMMARY
          echo "The package version remains unchanged." >> $GITHUB_STEP_SUMMARY
